<?php

use Drupal\Component\Utility\Unicode;
use Drupal\Core\Routing\RouteMatchInterface;

include('ParselyMetadata.php');
include('section.inc');

/**
 * Implements hook_page_attachments().
 */

/**
 * Implements hook_page_attachments().
 */

function parsely_page_top(array &$page_top)
{

	$apikey = \Drupal::config('parsely.settings')->get('parsely_apikey');
	$node = \Drupal::routeMatch()->getParameter('node');
	$route = \Drupal::routeMatch()->getRouteObject();
	$is_front_page = \Drupal::service('path.matcher')->isFrontPage();
	$backend_page = is_backend_page($route);
	if ((!$apikey || !$node || $backend_page) && !$is_front_page) {

	} else {
		$page_top['parsely'] = [
			'#type' => 'html_tag',
			'#tag' => 'script',
			'#attributes' => [
				'src' => 'https://cdn.parsely.com/keys/' . $apikey . '/p.js'
			]
		];
	}
}

function parsely_page_bottom(array &$page_bottom) {

	$apikey = \Drupal::config('parsely.settings')->get('parsely_apikey');
	$node = \Drupal::routeMatch()->getParameter('node');
	$route = \Drupal::routeMatch()->getRouteObject();
	$backend_page = is_backend_page($route);
	$is_front_page = \Drupal::service('path.matcher')->isFrontPage();

	if ($is_front_page) {
		$home_page = \Drupal::request()->getScheme() . '://' . \Drupal::request()->getHost();
		$parsely_metas = [
			'@context' => 'schema.org',
			'@type' => "WebPage",
			'url' => $home_page,
		];

		$parsely_tag = [
			'#type' => 'html_tag',
			'#tag' => 'script',
			'#attributes' => [
				'type' => 'application/ld+json'
			],
			'#value' => new \Drupal\parsely\Component\Render\ParselyRenderer(json_encode($parsely_metas))

		];

		$page_bottom['parsely'] = $parsely_tag;
	}

	else if (!$apikey || !$node || $backend_page) {

	}


	else {
		$parsely_metadata = new \Drupal\parsely\ParselyMetadata($node);
		$parsely_metas = [
			'@context' => 'schema.org',
			'@type' => $parsely_metadata->getSchemaType(),
			'author' => $parsely_metadata->getCreator(),
			'url' => $parsely_metadata->getURL($node),
			'section' => $parsely_metadata->getSection(),
			'keywords' => $parsely_metadata->getTags(),
			'datePublished' => $parsely_metadata->getDate(),
			'headline' => $parsely_metadata->getHeadline(),
			'thumbnailUrl' => $parsely_metadata->getThumbnail()
		];

		$parsely_tag = [
			'#type' => 'html_tag',
			'#tag' => 'script',
			'#attributes' => [
				'type' => 'application/ld+json'
			],
				'#value' => new \Drupal\parsely\Component\Render\ParselyRenderer(json_encode($parsely_metas))

		];

		$page_bottom['parsely'] = $parsely_tag;
	}


}
/**
 * Checks to see if page is an admin page / node edit page (draft page)
 * @param $route \Symfony\Component\Routing\Route
 * @return boolean
 */
function is_backend_page($route) {
	$is_admin = \Drupal::service('router.admin_context')->isAdminRoute($route);
	$is_edit_page = \Drupal::RouteMatch()->getRouteName() == 'entity.node.edit_form';
	return ($is_admin || $is_edit_page);
}